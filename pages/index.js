import Head from "next/head";
import Image from "next/image";

import { useSession, signIn, signOut } from "next-auth/client";

import List from "@material-ui/core/List";
import ListItem from "@material-ui/core/ListItem";
import ListItemIcon from "@material-ui/core/ListItemIcon";
import { AccountCircle, Menu, MenuBook } from "@material-ui/icons";
import PeopleAltIcon from "@material-ui/icons/PeopleAlt";
import { Avatar, Box, Grid } from "@material-ui/core";
import ChatIcon from "@material-ui/icons/Chat";
import BarChartIcon from "@material-ui/icons/BarChart";
import DonutLargeIcon from "@material-ui/icons/DonutLarge";
import RefreshIcon from "@material-ui/icons/Refresh";
import styles from "../styles/Home.module.scss";
import { useState } from "react";
import { Item } from "../components/item";
import { Profile } from "../components/profile";
import { ChatBox } from "../components/chatBox";

const FBSampleData = [
  {
    id: 1,
    fname: "Amit",
    lname: "RG",
    email: "some@gamil.com",
    profile: "https://material-ui.com/static/images/avatar/1.jpg",
    type: "post",
    intro: {
      title: "Available in store",
      message: "Any stock for this product",
    },

    chats: [
      ["nesdhfk  jhsdf kjhsdfk jw message"],
      ["replay 1", "replay 2"],
      ["another message"],
    ],
  },
  {
    id: 2,
    fname: "Hilton",
    type: "DM",
    lname: "Sexena",
    email: "sexena@gamil.com",
    intro: {
      title: "Awesome product",
      message: "Hey there is it available.",
    },
    profile: "https://material-ui.com/static/images/avatar/3.jpg",
    chats: [
      ["new message"],
      ["user answer", "second answer"],
      ["another message"],
    ],
  },
];

export default function Home() {
  const [session] = useSession();

  const [data] = useState(FBSampleData);

  const [selected, setSelected] = useState(FBSampleData[0]);

  const handleSignIn = (e) => {
    e.preventDefault();
    signIn();
  };

  const handleSignOut = (e) => {
    e.preventDefault();
    signOut();
  };

  return (
    <div>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div className={styles.container}>
        <div className={styles.nav}>
          <List>
            <ListItem>
              <ListItemIcon>
                <DonutLargeIcon className={styles.icon} />
              </ListItemIcon>
            </ListItem>
            <ListItem className={styles.active}>
              <ListItemIcon>
                <ChatIcon
                  onClick={() => push("/")}
                  className={styles.activeIcon}
                />
              </ListItemIcon>
            </ListItem>
            <ListItem>
              <ListItemIcon>
                <PeopleAltIcon className={styles.icon} />
              </ListItemIcon>
            </ListItem>
            <ListItem>
              <ListItemIcon>
                <BarChartIcon className={styles.icon} />
              </ListItemIcon>
            </ListItem>
          </List>
          <List>
            {session && (
              <ListItem>
                <ListItemIcon onClick={handleSignOut}>
                  <Avatar alt="profile pic" src={session.user.image} />
                </ListItemIcon>
              </ListItem>
            )}
            {!session && (
              <ListItem>
                <ListItemIcon onClick={handleSignIn}>
                  <AccountCircle className={styles.icon} />
                </ListItemIcon>
              </ListItem>
            )}
          </List>
        </div>
        <div className={styles.list}>
          <div className={styles.title}>
            <Menu />
            Conversation
            <RefreshIcon />
          </div>
          <div>
            {data.map((item, idx) => (
              <div
                key={idx}
                className={
                  selected && item.id === selected.id ? styles.selected : ""
                }
              >
                <Item
                  item={item}
                  selected={selected && item.id === selected.id}
                  onSelect={() => setSelected(item)}
                />
              </div>
            ))}
          </div>
        </div>
        <div className={styles.chatBox}>
          <div className={styles.title}>
            {selected && (
              <>
                {selected.fname} {selected.lname}
              </>
            )}
          </div>
          <div>{selected && <ChatBox item={selected} />}</div>
        </div>
        <div className={styles.infoBox}>
          {selected && <Profile item={selected} />}
        </div>
      </div>
    </div>
  );
}
